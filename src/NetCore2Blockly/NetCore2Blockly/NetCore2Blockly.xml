<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetCore2Blockly</name>
    </assembly>
    <members>
        <member name="T:NetCore2Blockly.ActionInfoFromNetAPI">
            <summary>
            generator
            </summary>
        </member>
        <member name="M:NetCore2Blockly.ActionInfoFromNetAPI.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.ActionInfoFromNetAPI"/> class.
            </summary>
            <param name="apiDescription">The API description.</param>
        </member>
        <member name="T:NetCore2Blockly.BindingSourceDefinition">
            <summary>
            definition of binding
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.None">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Body">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Custom">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Form">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Header">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.ModelBinding">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Path">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Query">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Services">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.Special">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="F:NetCore2Blockly.BindingSourceDefinition.FormFile">
            <summary>
            See BindingSource
            </summary>
        </member>
        <member name="T:NetCore2Blockly.BlocklyActionRegisterFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetCore2Blockly.BlocklyActionRegisterFilter.#ctor(NetCore2Blockly.GenerateBlocklyFilesHostedService)">
            <summary>
            ctor
            </summary>
            <param name="hosted"></param>
        </member>
        <member name="T:NetCore2Blockly.BlocklyFileGenerator">
            <summary>
            all blockly that should be generated
            </summary>
            
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.#ctor(System.Collections.Generic.List{NetCore2Blockly.ActionInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.BlocklyFileGenerator"/> class.
            </summary>
            <param name="actionList">The action list.</param>
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateNewBlocklyTypesDefinition">
            <summary>
            Generates types of Blockly
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateBlocklyToolBoxValueDefinitionFile(System.String)">
            <summary>
            Generates the blocks definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateBlocklyAPIFunctions(System.String)">
            <summary>
            Functions blocklyAPIFunctions to be generated.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.BlocklyStringToColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetCore2Blockly.BlocklyStringToColor.ConvertToHue(System.Int32)">
            <summary>
            Convert to hue given the controller name
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyStringToColor.ToHexColor(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyStringToColor.ConvertFromRgbToHue(System.ValueTuple{System.Int32,System.Int32,System.Int32})">
            <summary>
            Generate hsv color space from rgb colors
            </summary>
            <param name="rgbColor"></param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.BlocklyUIOptions">
            <summary>
            options for UI
            </summary>
        </member>
        <member name="M:NetCore2Blockly.BlocklyUIOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.BlocklyUIOptions"/> class.
            </summary>
        </member>
        <member name="P:NetCore2Blockly.BlocklyUIOptions.StartBlocks">
            <summary>
            Gets or sets the start blocks.
            </summary>
            <value>
            The start blocks.
            </value>
        </member>
        <member name="P:NetCore2Blockly.BlocklyUIOptions.HeaderName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:NetCore2Blockly.BlocklyUIOptions.CustomBlocks">
            <summary>
            Gets or sets the custom blocks.
            </summary>
            <value>
            The custom blocks.
            </value>
        </member>
        <member name="P:NetCore2Blockly.BlocklyUIOptions.RunTimeString">
            <summary>
            Gets or sets the run time blocks.
            </summary>
            <value>
            The run time blocks.
            </value>
        </member>
        <member name="T:NetCore2Blockly.EnumerateWebAPI">
            <summary>
            enumerate and generate
            </summary>
        </member>
        <member name="M:NetCore2Blockly.EnumerateWebAPI.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.EnumerateWebAPI"/> class.
            </summary>
            <param name="api">The API.</param>
        </member>
        <member name="M:NetCore2Blockly.EnumerateWebAPI.CreateActionList">
            <summary>
            Creates the action list to generate blocks
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.ExtensionMethods.ActionInfoExtensions">
            <summary>
            extnesion to generate names from ActionInfo
            </summary>
        </member>
        <member name="M:NetCore2Blockly.ExtensionMethods.ActionInfoExtensions.GenerateCommandName(NetCore2Blockly.ActionInfo)">
            <summary>
            Generates the name of the command.
            </summary>
            <param name="actionInfo">The action information.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.ExtensionMethods.ActionInfoExtensions.CommandDisplayName(NetCore2Blockly.ActionInfo,System.Boolean)">
            <summary>
            Commands the display name.
            </summary>
            <param name="actionInfo">The action information.</param>
            <param name="withVerb">display with verb</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.ExtensionMethods.IntegerExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetCore2Blockly.ExtensionMethods.IntegerExtensions.ToHex(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.ActionListExtensions">
            <summary>
            extension to generate types
            </summary>
        </member>
        <member name="M:NetCore2Blockly.ActionListExtensions.GetAllTypesWithNullBlocklyType(NetCore2Blockly.ActionInfo[])">
            <summary>
            Gets the type with null blockly default types.
            </summary>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.CLIExtension">
            <summary>
            extension to register to the startup
            </summary>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklyLinksFromConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Uses the blockly links from config
            </summary>
            <param name="app">The application.</param>
            <param name="config">The configuration.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBatchBlocklyLinks(Microsoft.AspNetCore.Builder.IApplicationBuilder,NetCore2Blockly.BLocklyOtherLinks)">
            <summary>
            Adds the batch blockly links.
            </summary>
            <param name="app">The application.</param>
            <param name="links">The links.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.AddBlockly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            Adds the blockly to startup
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <param name="fullWebSiteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklyOData(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.String)">
            <summary>
            Uses the blockly swagger.
            </summary>
            <param name="app">The application.</param>
            <param name="name">The name.</param>
            <param name="endPoint">The end point.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklySwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.String)">
            <summary>
            Uses the blockly swagger.
            </summary>
            <param name="app">The application.</param>
            <param name="name">The name.</param>
            <param name="endPoint">The end point.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlockly(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Uses the blockly.
            </summary>
            <param name="app">The application.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklyGraphQL(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.String)">
            <summary>
            add GraphQL endpoints
            </summary>
            <param name="app"></param>
            <param name="key"></param>
            <param name="endpoint"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklyUI(Microsoft.AspNetCore.Builder.IApplicationBuilder,NetCore2Blockly.BlocklyUIOptions)">
            <summary>
            Uses the cli.
            </summary>
            <param name="appBuilder">The application builder.</param>
            <param name="options">The application builder.</param>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlocklyLocalStorage(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Uses the storage
            </summary>
            <param name="appBuilder">The application builder.</param>
        </member>
        <member name="T:NetCore2Blockly.BLocklyNameLink">
            <summary>
            name link in config
            </summary>
        </member>
        <member name="P:NetCore2Blockly.BLocklyNameLink.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:NetCore2Blockly.BLocklyNameLink.Link">
            <summary>
            Gets or sets the link.
            </summary>
            <value>
            The link.
            </value>
        </member>
        <member name="T:NetCore2Blockly.BLocklyOtherLinks">
            <summary>
            other dynamic links
            </summary>
        </member>
        <member name="P:NetCore2Blockly.BLocklyOtherLinks.Swaggers">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.BLocklyOtherLinks" /> class.
            </summary>
        </member>
        <member name="P:NetCore2Blockly.BLocklyOtherLinks.ODatas">
            <summary>
            Gets or sets the o datas.
            </summary>
            <value>
            The o datas.
            </value>
        </member>
        <member name="T:NetCore2Blockly.TypeExtensions">
            <summary>
            extension to generate blockly from type
            </summary>
        </member>
        <member name="M:NetCore2Blockly.TypeExtensions.TranslateToBlocklyBlocksType(System.Type)">
            <summary>
            Translates the type to blockly blocks.
            </summary>
            <param name="type">The t.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeExtensions.TranslateToBlocklyType(System.Type)">
            <summary>
            Translates the type to blockly.
            </summary>
            <param name="type">The t.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeExtensions.TranslateToNewTypeName(System.Type)">
            <summary>
            Translates type to new type, if necessary.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeExtensions.ConvertibleToBlocklyType(System.Type)">
            <summary>
            see if the type is blockly default type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.GenerateBlocklyFilesHostedService">
            <summary>
            host to enumerate
            </summary>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostedService" />
        </member>
        <member name="F:NetCore2Blockly.GenerateBlocklyFilesHostedService.BlocklyToolBoxFunctionDefinition">
            <summary>
            The blockly tool box function definition
            </summary>
        </member>
        <member name="F:NetCore2Blockly.GenerateBlocklyFilesHostedService.BlocklyAPIFunctions">
            <summary>
            The blockly API functions
            </summary>
        </member>
        <member name="F:NetCore2Blockly.GenerateBlocklyFilesHostedService.BlocklyToolBoxValueDefinition">
            <summary>
            The blockly tool box value definition
            </summary>
        </member>
        <member name="F:NetCore2Blockly.GenerateBlocklyFilesHostedService.BlocklyTypesDefinition">
            <summary>
            The blockly types definition
            </summary>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.GenerateBlocklyFilesHostedService"/> class.
            </summary>
            <param name="prov"></param>
            <param name="api">The API.</param>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            starts
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">Indicates that the shutdown process should no longer be graceful.</param>
        </member>
        <member name="T:NetCore2Blockly.GraphQL.Root">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.Fields">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.InputFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.Interfaces">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.EnumValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.Root.PossibleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetCore2Blockly.GraphQL.GraphQLTypeArgument.FullName">
            <summary>
            Gets the OGT name. ie DepartmentOGT
            </summary>
        </member>
        <member name="T:NetCore2Blockly.ActionInfo">
            <summary>
            generic action info
            </summary>
        </member>
        <member name="M:NetCore2Blockly.ActionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.ActionInfo"/> class.
            </summary>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.ActionName">
            <summary>
            Gets or sets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.ControllerName">
            <summary>
            Gets or sets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.RelativeRequestUrl">
            <summary>
            Gets or sets the relative request URL.
            </summary>
            <value>
            The relative request URL.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.ReturnType">
            <summary>
            Gets or sets the type of the return.
            </summary>
            <value>
            The type of the return.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.Verb">
            <summary>
            Gets or sets the verb.
            </summary>
            <value>
            The verb.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.Site">
            <summary>
            Gets or sets the site.
            </summary>
            <value>
            The site.
            </value>
        </member>
        <member name="M:NetCore2Blockly.ActionInfo.CustomGetHashCode">
            <summary>
             hash code do display.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.Params">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="P:NetCore2Blockly.ActionInfo.HasParams">
            <summary>
            Gets a value indicating whether this instance has parameters.
            </summary>
            <value>
             <c>true</c> if this instance has parameters; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.BlocklyDefinitionGenerator">
            <summary>
            generates blockly definition for a type
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyDefinitionGenerator.GenerateBlocklyDefinition(NetCore2Blockly.TypeArgumentBase)">
            <summary>
            Generates the blockly definition.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyDefinitionGenerator.GenerateDefinitionString(NetCore2Blockly.TypeArgumentBase)">
            <summary>
            Generates the definition string.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyDefinitionGenerator.GenerateJSstring(NetCore2Blockly.TypeArgumentBase)">
            <summary>
            Generates the javascript string.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.BlocklyFunctionDefinitionGenerator">
            <summary>
            generates blockly functions
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyFunctionDefinitionGenerator.GeneratePropertyDefinitions(NetCore2Blockly.ActionInfo)">
            <summary>
            Generates the property definitions.
            </summary>
            <param name="actionInfo">The action information.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyFunctionDefinitionGenerator.GenerateFunctionDefinition(NetCore2Blockly.ActionInfo,System.String)">
            <summary>
            Generates the function definition.
            blockly block definition for action
            </summary>
            <param name="actionInfo">The action information.</param>
            <param name="key">key</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.BlocklyFunctionJSGenerator">
            <summary>
            generates function to translate blockly to JS
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyFunctionJSGenerator.GenerateFunctionJS(NetCore2Blockly.ActionInfo,System.String)">
            <summary>
            blockly javascript code for action.
            </summary>
            <param name="actionInfo">The action information.</param>
            <param name="key">key</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxFunctionDefinitionsGenerator">
            <summary>
            generates items to toolbox
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxFunctionDefinitionsGenerator.GenerateBlocklyToolBoxFunctionDefinitions(NetCore2Blockly.ActionInfo[],System.String)">
            <summary>
            Generates the blockly tool box function definitions.
            </summary>
            <param name="actionList">The action list.</param>
            <param name="key">The action list.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxFunctionDefinitionsGenerator.GenerateBlockShadowField(System.String)">
            <summary>
            Generates the block shadow field.
            </summary>
            <param name="blockShadowType">Type of the block shadow.</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxJSGenerator">
            <summary>
            generates js for seeing blocks in toolbox
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxJSGenerator.GenerateBlocklyToolBoxValue(NetCore2Blockly.TypeArgumentBase[],System.String)">
            <summary>
            Generates the blockly tool box value.
            </summary>
            <param name="types">The types.</param>
            <param name="key">site key.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.BlocklyToolBoxJSGenerator.GenerateToolBoxCodeForAllPropertiesOfAType(System.String,NetCore2Blockly.TypeArgumentBase)">
            <summary>
            Generates tool box code for all properties of a type.
            </summary>
            <param name="blockText">The block text.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator">
            <summary>
            javascript generator for blockly
            </summary>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator.GenerateBlocklyDefinition(NetCore2Blockly.TypeArgumentBase)">
            <summary>
            Generates the blockly definition.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator.GenerateBlocklyToolBoxValue(NetCore2Blockly.TypeArgumentBase[],System.String)">
            <summary>
            Generates the blockly tool box value.
            </summary>
            <param name="types">The types.</param>
            <param name="key">site key</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator.GenerateBlocklyToolBoxFunctionDefinitions(NetCore2Blockly.ActionInfo[],System.String)">
            <summary>
            Generates the blockly tool box function definitions.
            </summary>
            <param name="actionList">The action list.</param>
            <param name="key">The action list.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator.GenerateFunctionJS(NetCore2Blockly.ActionInfo,System.String)">
            <summary>
            Generates the function js.
            </summary>
            <param name="action">The action.</param>
            <param name="key">site key</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.JavascriptGeneration.JavascriptGenerator.GenerateFunctionDefinition(NetCore2Blockly.ActionInfo,System.String)">
            <summary>
            Generates the function definition.
            </summary>
            <param name="action">The action.</param>
            <param name="key">key</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.OData.ActionInfoOdata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.OData.ActionInfoOdata"/> class.
            </summary>
        </member>
        <member name="M:NetCore2Blockly.Swagger.ActionInfoSwagger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.Swagger.ActionInfoSwagger"/> class.
            </summary>
        </member>
        <member name="T:NetCore2Blockly.PropertyBase">
            <summary>
            emulates a property
            </summary>
        </member>
        <member name="P:NetCore2Blockly.PropertyBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:NetCore2Blockly.PropertyBase.PropertyType">
            <summary>
            Gets or sets the type of the property.
            </summary>
            <value>
            The type of the property.
            </value>
        </member>
        <member name="P:NetCore2Blockly.PropertyBase.IsArray">
            <summary>
            Gets a value indicating whether this instance is array.
            </summary>
            <value>
              <c>true</c> if this instance is array; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:NetCore2Blockly.TypeArgumentBase">
            <summary>
            emultates a type
            </summary>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.TypeArgumentBase"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="F:NetCore2Blockly.TypeArgumentBase.AddDefinitions">
            <summary>
            more defintions to add
            see odata.type 
            </summary>
        </member>
        <member name="P:NetCore2Blockly.TypeArgumentBase.Site">
            <summary>
            Gets or sets the site.
            </summary>
            <value>
            The site.
            </value>
        </member>
        <member name="F:NetCore2Blockly.TypeArgumentBase.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:NetCore2Blockly.TypeArgumentBase.id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="P:NetCore2Blockly.TypeArgumentBase.FullName">
            <summary>
            Gets the full name.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.TranslateToBlocklyType">
            <summary>
            Translates the type of to blockly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.ConvertibleToBlocklyType">
            <summary>
            Convertibles the type of to blockly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.TranslateToBlocklyBlocksType">
            <summary>
            Translates the type of to blockly blocks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.TranslateToNewTypeName">
            <summary>
            Translates the name of to new type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NetCore2Blockly.TypeArgumentBase.IsEnum">
            <summary>
            Gets a value indicating whether this instance is enum.
            </summary>
            <value>
              <c>true</c> if this instance is enum; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:NetCore2Blockly.TypeArgumentBase.TypeNameForBlockly">
            <summary>
            Gets the type name for blockly.
            </summary>
            <value>
            The type name for blockly.
            </value>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.GetProperties">
            <summary>
            Gets the properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.TypeArgumentBase.GetValuesForEnum">
            <summary>
            Gets the values for enum.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NetCore2Blockly.TypeArgumentBase.IsValueType">
            <summary>
            Gets a value indicating whether this instance is value type.
            </summary>
            <value>
              <c>true</c> if this instance is value type; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
